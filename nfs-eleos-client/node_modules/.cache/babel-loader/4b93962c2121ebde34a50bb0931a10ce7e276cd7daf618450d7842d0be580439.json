{"ast":null,"code":"var _jsxFileName = \"/Users/eldridgeng/SD_ECommerce_Website/nfs-eleos-client/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { apiRequest } from \"../api/apiRequest\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  useEffect(() => {\n    console.log(\"Testing API Endpoint\");\n    // Test the GET all users endpoint\n    const fetchAllUsers = async () => {\n      try {\n        const response = await apiRequest(\"users\", \"GET\", \"\");\n        if (response.success) {\n          console.log(\"Fetched users:\", response.data);\n        } else {\n          console.error(\"Error fetching users:\", response.message);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Test the GET user by ID endpoint\n    const fetchUserById = async userId => {\n      try {\n        const response = await apiRequest(\"users\", \"GET\", userId);\n        if (response.success) {\n          console.log(`Fetched user with ID ${userId}:`, response.data);\n        } else {\n          console.error(`Error fetching user with ID ${userId}:`, response.message);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Test the POST register endpoint\n    const registerUser = async () => {\n      try {\n        const response = await apiRequest(\"users\", \"POST\", \"register\", {\n          username: \"newuser5\",\n          email: \"newuser5@example.com\",\n          password: \"password123\",\n          isAdmin: false,\n          isSuperAdmin: false\n        });\n        if (response.success) {\n          console.log(\"User registered successfully:\", response.data);\n        } else {\n          console.error(\"Error registering user:\", response.message);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Call the test functions\n    console.log(\"Testing API Endpoints:\");\n    registerUser();\n    fetchAllUsers();\n    fetchUserById(\"60d21b4667d0d8992e610c85\"); // Replace with a valid user ID\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), \"Welcome to ELEOS Home Page\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","apiRequest","Navbar","jsxDEV","_jsxDEV","Home","_s","console","log","fetchAllUsers","response","success","data","error","message","fetchUserById","userId","registerUser","username","email","password","isAdmin","isSuperAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eldridgeng/SD_ECommerce_Website/nfs-eleos-client/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { apiRequest } from \"../api/apiRequest\";\nimport Navbar from \"./Navbar\"\n\nconst Home = () => {\n    useEffect(() => {\n        console.log(\"Testing API Endpoint\");\n        // Test the GET all users endpoint\n        const fetchAllUsers = async () => {\n            try {\n                const response = await apiRequest(\"users\", \"GET\", \"\");\n                if (response.success) {\n                    console.log(\"Fetched users:\", response.data);\n                } else {\n                    console.error(\"Error fetching users:\", response.message);\n                }\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        };\n\n        // Test the GET user by ID endpoint\n        const fetchUserById = async (userId: string) => {\n            try {\n                const response = await apiRequest(\"users\", \"GET\", userId);\n                if (response.success) {\n                    console.log(\n                        `Fetched user with ID ${userId}:`,\n                        response.data\n                    );\n                } else {\n                    console.error(\n                        `Error fetching user with ID ${userId}:`,\n                        response.message\n                    );\n                }\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        };\n\n        // Test the POST register endpoint\n        const registerUser = async () => {\n            try {\n                const response = await apiRequest(\"users\", \"POST\", \"register\", {\n                    username: \"newuser5\",\n                    email: \"newuser5@example.com\",\n                    password: \"password123\",\n                    isAdmin: false,\n                    isSuperAdmin: false,\n                });\n                if (response.success) {\n                    console.log(\"User registered successfully:\", response.data);\n                } else {\n                    console.error(\"Error registering user:\", response.message);\n                }\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        };\n\n        // Call the test functions\n        console.log(\"Testing API Endpoints:\");\n        registerUser();\n        fetchAllUsers();\n        fetchUserById(\"60d21b4667d0d8992e610c85\"); // Replace with a valid user ID\n    }, []);\n    return <div>\n        <Navbar />  \n        Welcome to ELEOS Home Page\n    </div>;\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}